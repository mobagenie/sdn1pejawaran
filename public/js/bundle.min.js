YT.query = {
 getCover: function() {
  $.getJSON("https://www.googleapis.com/youtube/v3/channels?part=brandingSettings&id=" + encodeURIComponent(YT.live.vs1) + "," + encodeURIComponent(YT.live.vs2) + "&key=" + YT.keyManager.getKey(), function(e) {
   if (e.items[0].id == YT.live.vs1) {
    YT.updateManager.updateCover(e.items[0].brandingSettinvar main = {
      bigImgEl: null,
      numImgs: null,
      init: function() {
       $(window).scroll(function() {
        if ($(".navbar").offset().top > 50) {
         $(".navbar").addClass("top-nav-short");
        } else {
         $(".navbar").removeClass("top-nav-short");
        }
       });
       $('#main-navbar').on('show.bs.collapse', function() {
        $(".navbar").addClass("top-nav-expanded");
       });
       $('#main-navbar').on('hidden.bs.collapse', function() {
        $(".navbar").removeClass("top-nav-expanded");
       });
       $('#main-navbar').on("click", ".navlinks-parent", function(e) {
        var target = e.target;
        $.each($(".navlinks-parent"), function(key, value) {
         if (value == target) {
          $(value).parent().toggleClass("show-children");
         } else {
          $(value).parent().removeClass("show-children");
         }
        });
       });
       var menus = $(".navlinks-container");
       if (menus.length > 0) {
        var navbar = $("#main-navbar").find("ul");
        var fakeMenuHtml = "<li class='fake-menu' style='display:none;'><a></a></li>";
        navbar.append(fakeMenuHtml);
        var fakeMenu = $(".fake-menu");
        $.each(menus, function(i) {
         var parent = $(menus[i]).find(".navlinks-parent");
         var children = $(menus[i]).find(".navlinks-children a");
         var words = [];
         $.each(children, function(idx, el) {
          words = words.concat($(el).text().trim().split(/\s+/));
         });
         var maxwidth = 0;
         $.each(words, function(id, word) {
          fakeMenu.html("<a>" + word + "</a>");
          var width = fakeMenu.width();
          if (width > maxwidth) {
           maxwidth = width;
          }
         });
         $(menus[i]).css('min-width', maxwidth + 'px')
        });
        fakeMenu.remove();
       }
       main.initImgs();
      },
      initImgs: function() {
       if ($("#header-big-imgs").length > 0) {
        main.bigImgEl = $("#header-big-imgs");
        main.numImgs = main.bigImgEl.attr("data-num-img");
        var imgInfo = main.getImgInfo();
        var src = imgInfo.src;
        var desc = imgInfo.desc;
        var position = imgInfo.position;
        main.setImg(src, desc, position);
        var getNextImg = function() {
         var imgInfo = main.getImgInfo();
         var src = imgInfo.src;
         var desc = imgInfo.desc;
         var position = imgInfo.position;
         var prefetchImg = new Image();
         prefetchImg.src = src;
         setTimeout(function() {
          var img = $("<div></div>").addClass("big-img-transition").css("background-image", 'url(' + src + ')');
          if (position !== undefined) {
           img.css("background-position", position);
          }
          $(".intro-header.big-img").prepend(img);
          setTimeout(function() {
           img.css("opacity", "1");
          }, 50);
          setTimeout(function() {
           main.setImg(src, desc, position);
           img.remove();
           getNextImg();
          }, 1000);
         }, 6000);
        };
        if (main.numImgs > 1) {
         getNextImg();
        }
       }
      },
      getImgInfo: function() {
       var randNum = Math.floor((Math.random() * main.numImgs) + 1);
       var src = main.bigImgEl.attr("data-img-src-" + randNum);
       var desc = main.bigImgEl.attr("data-img-desc-" + randNum);
       var position = main.bigImgEl.attr("data-img-position-" + randNum);
       return {
        src: src,
        desc: desc,
        position: position
       }
      },
      setImg: function(src, desc, position) {
       $(".intro-header.big-img").css("background-image", 'url(' + src + ')');
       if (position !== undefined) {
        $(".intro-header.big-img").css("background-position", position);
       } else {
        $(".intro-header.big-img").css("background-position", "");
       }
       if (typeof desc !== typeof undefined && desc !== false) {
        var mdLinkRe = /\[(.*?)\]\((.+?)\)/;
        if (desc.match(mdLinkRe)) {
         var splitDesc = desc.split(mdLinkRe);
         var imageDesc = $(".img-desc");
         splitDesc.forEach(function(element, index) {
          if (index % 3 === 0) {
           imageDesc.append(element);
          }
          if (index % 3 === 1) {}
          if (index % 3 === 2) {
           var link = $("<a>", {
            "href": element,
            "target": "_blank",
            "rel": "noopener noreferrer"
           }).text(splitDesc[index - 1]);
           imageDesc.append(link);
          }
         });
         imageDesc.show();
        } else {
         $(".img-desc").text(desc).show();
        }
       } else {
        $(".img-desc").hide();
       }
      }
     }; document.addEventListener('DOMContentLoaded', main.init);
     if ((window.location.pathname == "/page/search/")) {
      var lunrIndex;
      var allPosts = [];
      fetch("/index.xml").then(response => {
       return response.text()
      }).then(response => {
       xmlDoc = $.parseXML(response), $xml = $(xmlDoc), $article = $xml.find("item").each(function(i, e) {
        $title = $(this).find('title').text();
        $link = $(this).find('link').text();
        $desc = $(this).find('description').text();
        allPosts.push({
         title: $title,
         uri: $link,
         description: $desc
        })
       });
       lunrIndex = lunr(function() {
        this.field("title", {
         boost: 10
        });
        this.field("description", {
         boost: 5
        });
        this.ref("uri");
        for (var i = 0; i < allPosts.length; ++i) {
         this.add(allPosts[i]);
        }
       });
      }).catch(error => {
       console.error(error);
      });
      document.getElementById("search-button").onclick = function() {
       search();
      };

      function search() {
       document.getElementById("results").innerHTML = "";
       let query = document.getElementById("search-field").value;
       let results = lunrIndex.search(query).map(result => {
        return allPosts.filter(page => {
         return page.uri === result.ref && result.score > 4;
        })[0];
       });
       let totalResults;
       results = results.filter(p => {
        if (p) {
         return true;
        }
       });
       document.createElement("h1");
       for (let i = 0; i < 20 && i < results.length; i++) {
        let header = document.createElement("h2");
        let anchor = document.createElement("a");
        anchor.setAttribute("href", results[i].uri);
        anchor.innerText = results[i].title;
        header.appendChild(anchor);
        document.getElementById("results").appendChild(header);
        document.getElementById("found").innerText = `Found ${
results.length
} results - showing ${i+1}`;
       }
      }
      document.getElementById("search-field").addEventListener("keydown", function(event) {
       if (event.key === "Enter") {
        event.preventDefault();
        search();
       }
      });
     }

     function init() {
      var vidDefer = document.getElementsByTagName("iframe");
      for (var i = 0; i < vidDefer.length; i++) {
       if (vidDefer[i].getAttribute("data-src")) {
        vidDefer[i].setAttribute("src", vidDefer[i].getAttribute("data-src"));
       }
      }
     }
     window.onload = init;
     [].forEach.call(document.querySelectorAll('.adsbygoogle'), function() {
      (adsbygoogle = window.adsbygoogle || []).push({});
     }); gs.image.bannerImageUrl, e.items[1].brandingSettings.image.bannerImageUrl);
   } else {
    YT.updateManager.updateCover(e.items[1].brandingSettings.image.bannerImageUrl, e.items[0].brandingSettings.image.bannerImageUrl);
   }
  });
 },
 begin: function() {
  $.getJSON("https://www.googleapis.com/youtube/v3/channels?part=snippet&id=" + encodeURIComponent(YT.live.vs1) + "," + encodeURIComponent(YT.live.vs2) + "&key=" + YT.keyManager.getKey(), function(e) {
   if (e.items[0].id == YT.live.vs1) {
    YT.query.getCover(e.items[0].id, e.items[1].id);
    YT.updateManager.updateName(e.items[0].snippet.title, e.items[1].snippet.title);
    YT.updateManager.updateProfile(e.items[0].snippet.thumbnails.high.url ? e.items[0].snippet.thumbnails.high.url : e.items[0].snippet.thumbnails.default.url, e.items[1].snippet.thumbnails.high.url ? e.items[1].snippet.thumbnails.high.url : e.items[1].snippet.thumbnails.default.url);
   } else {
    YT.query.getCover(e.items[1].id, e.items[0].id);
    YT.updateManager.updateName(e.items[1].snippet.title, e.items[0].snippet.title);
    YT.updateManager.updateProfile(e.items[1].snippet.thumbnails.high.url ? e.items[1].snippet.thumbnails.high.url : e.items[1].snippet.thumbnails.default.url, e.items[0].snippet.thumbnails.high.url ? e.items[0].snippet.thumbnails.high.url : e.items[0].snippet.thumbnails.default.url);
   }
  });
 },
 bind: function() {}
};